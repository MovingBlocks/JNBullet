ext {
    swigTarget = ["linearmath","collision","dynamics","softbody","extras","inversedynamics"]
}

swigTarget.each { module ->
    tasks.create(name: "swig_"+"${module}", type: Exec) {
        description = 'Swigging collision'
        executable "swig"
        args ("-java",
                "-c++",
                "-Wall",
                "-Wextra",
                "-fvirtual",
                "-fastdispatch",
                "-macroerrors",
                "-package",
                "com.badlogic.gdx.physics.bullet.${module}",
                "-I$rootDir/natives/bullet3/src",
                "-I$rootDir/natives/custom",
                "-I$rootDir/natives/bullet3/Extras",
                "-I$rootDir/natives/bullet3/Extras/Serialize",
                "-o", "$rootDir/build/swig/${module}_wrap.cpp",
                "-outdir",
                "$rootDir/src/generated/java/com/badlogic/gdx/physics/bullet/${module}",
                "$rootDir/swig-src/${module}/${module}.i")

        doFirst {
            mkdir "$rootDir/src/generated/java/com/badlogic/gdx/physics/bullet/${module}"
            mkdir "$rootDir/build/swig"
        }
    }
}

task Swig{
    description = "Builds C++ bindings from java to Bullet3"
    dependsOn swig_collision
    dependsOn swig_dynamics
    dependsOn swig_softbody
    dependsOn swig_extras
    dependsOn swig_inversedynamics
    dependsOn swig_linearmath
    doLast {
        FileTree swig_tree  = fileTree(dir: "$rootDir/build/swig", include: '*.cpp')
        swig_tree.visit {element ->
            println "$element.relativePath => $element.file"
            String fileContents = element.file.text
        }
    }

}

task BuildClasses {
    swigTarget.each { module ->
        FileTree swig_visit  = fileTree(dir: "$rootDir/src/generated/java/com/badlogic/gdx/physics/bullet/${module}", include: '*.java')
        File outputFile = new File("$rootDir/swig-src/${module}", "classes.i");
        BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile,false));

        swig_visit.visit { element ->
            String classTarget = "$element.file.name".split("\\.")[0]
            writer.write("SPECIFY_CLASS($classTarget, com.badlogic.gdx.physics.bullet.${module})\n")
        }
        writer.close()
    }
}


